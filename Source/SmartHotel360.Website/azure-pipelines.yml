# Docker image
# Build a Docker image to run, deploy, or push to a container registry.
# Add steps that use Docker Compose, tag images, push to a registry, run an image, and more:
# https://docs.microsoft.com/vsts/pipelines/languages/docker

pool:
  name: 'smarthotelprod'
variables:
  imageName: 'sh360web:$(build.buildId)'
  acrName: 'shregistry.azurecr.io'
  customTag: 'sh360'
steps:
#- script: docker build -f Dockerfile -t $(imageName) .

- task: Docker@1
  displayName: 'docker build'
  inputs:
    azureSubscriptionEndpoint: RMPM
    azureContainerRegistry:  '$(acrName)'
    dockerFile: Source/SmartHotel360.Website/Dockerfile
    useDefaultContext: false
    buildContext: Source/SmartHotel360.Website
    imageName: '$(imageName)'
    includeLatestTag: true
- task: Docker@1
  displayName: 'Tag image with customTag'
  inputs:
    azureSubscriptionEndpoint: RMPM
    azureContainerRegistry: '$(acrName)'
    command: 'Tag image'
    imageName: '$(imageName)'
    arguments: '$(customTag)'
- task: Docker@1
  displayName: 'docker push image with BuildID tag'
  inputs:
    azureSubscriptionEndpoint: RMPM
    azureContainerRegistry: '$(acrName)'
    command: 'Push an image'
    imageName: '$(imageName)'
    includeLatestTag: true
- task: Docker@1
  displayName: 'docker push image with latest tag'
  inputs:
    azureSubscriptionEndpoint: RMPM
    azureContainerRegistry: '$(acrName)'
    command: 'Push an image'
    imageName: 'sh360web:latest'
- task: Docker@1
  displayName: 'docker push image with custom tag'
  inputs:
    azureSubscriptionEndpoint: RMPM
    azureContainerRegistry: '$(acrName)'
    command: 'Push an image'
    imageName: 'sh360web:$(customTag)'
